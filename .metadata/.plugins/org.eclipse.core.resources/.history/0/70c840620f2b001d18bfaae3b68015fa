import java.awt.Canvas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;

import javax.swing.JFrame;

public class Game extends Canvas implements Runnable {
    
	public static final int WIDTH= 640, HEIGTH=480;
	
	public int contador=100;
	
	public Game() {
	
    	 Dimension dimesion= new Dimension(WIDTH,HEIGHT);
    	 this.setPreferredSize(dimesion);
     }
	public void update() {
	//	contador--;
	}
	public void render() {
		BufferStrategy bs = this.getBufferStrategy();
		
		if (bs== null) {
			this.createBufferStrategy(3);
			return;
		}
		
		Graphics g= bs.getDrawGraphics();
		g.setColor(Color.black);
		g.fillRect(0, 0, WIDTH, HEIGTH);
		/*
		g.setColor(Color.white);
		g.setFont(new Font("Arial", Font.BOLD,23));
		g.drawString("Pontos :"+ contador, WIDTH/2 -60,30);
		*/
		g.setColor(Color.green);
		g.fillRect(Game.WIDTH/2 - contador, 20, contador *2, 20);
		bs.show();
		
	}
	
	public static void main(String[] args) {
		Game game= new Game();
		
		JFrame jframe= new JFrame("meu jogo");
		jframe.add(game);
		jframe.setLocationRelativeTo(null);
		jframe.pack();
		jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		jframe.setVisible(true);
		
		new Thread(game).start();
		
	}
	@Override
	public void run() {
		
		while (true) {
			
			update();
			render();
			try {
				Thread.sleep(100/60);
			}catch(InterruptedException e){
				e.printStackTrace();
			}
		}
		
	}
}
